<UserControl
    x:Class="TileShop.WPF.Views.ScatteredArrangerEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:TileShop.WPF.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TileShop.WPF.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.InputBindings>
        <KeyBinding Key="Z" Command="{s:Action ZoomIn}" />
        <KeyBinding Key="X" Command="{s:Action ZoomOut}" />
        <KeyBinding Key="G" Command="{s:Action ToggleGridlineVisibility}" />
        <KeyBinding Key="E" Command="{s:Action RequestEditSelection}" />
        <KeyBinding
            Key="A"
            Command="{s:Action SelectAll}"
            Modifiers="Ctrl" />
        <KeyBinding Key="Escape" Command="{s:Action CancelOverlay}" />
    </UserControl.InputBindings>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="5,5,0,10"
            Orientation="Horizontal">

            <StackPanel>
                <TextBlock HorizontalAlignment="Center" Text="Tools" />

                <StackPanel Orientation="Horizontal">
                    <RadioButton
                        HorizontalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Select}"
                        Style="{StaticResource {x:Type ToggleButton}}"
                        ToolTip="Click and drag across Arranger to select a region">
                        <Image Style="{StaticResource iconCursor}" />
                    </RadioButton>
                    <RadioButton
                        Margin="2,0,0,0"
                        VerticalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=ApplyPalette}"
                        Style="{StaticResource {x:Type ToggleButton}}"
                        ToolTip="Click on an Arranger element to apply the current palette">
                        <Image Style="{StaticResource iconPaletteBrush}" />
                    </RadioButton>
                    <RadioButton
                        Margin="2,0,0,0"
                        VerticalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=PickPalette}"
                        Style="{StaticResource {x:Type ToggleButton}}"
                        ToolTip="Click on an Arranger element to pick its associated palette">
                        <Image Style="{StaticResource iconPalettePicker}" />
                    </RadioButton>
                    <RadioButton
                        Margin="2,0,0,0"
                        HorizontalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=InspectElement}"
                        Style="{StaticResource {x:Type ToggleButton}}"
                        ToolTip="Hover Arranger elements to inspect their properties">
                        <Image Style="{StaticResource iconEye}" />
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <Separator Margin="5,0,5,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <StackPanel>
                <TextBlock HorizontalAlignment="Center" Text="Palette" />
                <ComboBox ItemsSource="{Binding Palettes}" SelectedItem="{Binding SelectedPalette}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <Button
                Margin="5,0,0,0"
                VerticalAlignment="Bottom"
                VerticalContentAlignment="Center"
                ToolTip="Associate Palette from Project with Arranger">
                <Image Style="{StaticResource iconPlusCircle}" />
            </Button>

            <StackPanel Margin="10,0,10,0">
                <TextBlock HorizontalAlignment="Center" Text="Zoom" />
                <Slider
                    MinWidth="100"
                    Maximum="{Binding MaxZoom}"
                    Minimum="{Binding MinZoom}"
                    ToolTip="Zoom"
                    Value="{Binding Zoom}" />
            </StackPanel>

            <StackPanel>
                <ToggleButton
                    Focusable="False"
                    IsChecked="{Binding ShowGridlines}"
                    ToolTip="Toggle gridline visibility"
                    Visibility="{Binding CanShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <StackPanel>
                        <TextBlock Text="Grid" />
                        <Image Style="{StaticResource iconGrid}" />
                    </StackPanel>
                </ToggleButton>
            </StackPanel>

            <Separator Margin="5,0,5,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <Button
                Click="{s:Action ResizeArranger}"
                ToolTip="Resizes the Arranger"
                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel>
                    <TextBlock Text="Resize" />
                    <Image Style="{StaticResource iconResize}" />
                </StackPanel>
            </Button>

            <Button
                Margin="5,0,0,0"
                Click="{s:Action EditSelection}"
                IsEnabled="{Binding CanEditSelection}"
                ToolTip="Opens selection in the pixel editor">
                <StackPanel>
                    <TextBlock Text="Edit" />
                    <Image Style="{StaticResource iconEdit}" />
                </StackPanel>
            </Button>

            <Button
                Margin="5,0,0,0"
                Click="{s:Action SaveChanges}"
                IsEnabled="{Binding IsModified}"
                ToolTip="Saves arranger properties to in-memory project">
                <StackPanel>
                    <TextBlock Text="Save" />
                    <Image Style="{StaticResource iconSave}" />
                </StackPanel>
            </Button>

            <Button Margin="5,0,0,0">
                <ui:FlyoutService.Flyout>
                    <ui:MenuFlyout>
                        <MenuItem
                            Click="{s:Action ApplyPasteAsElements}"
                            Header="As Elements"
                            IsEnabled="{Binding CanPasteElements}" />
                        <MenuItem
                            Click="{s:Action ApplyPasteAsPixels}"
                            Header="As Pixels"
                            IsEnabled="{Binding CanPastePixels}" />
                    </ui:MenuFlyout>
                </ui:FlyoutService.Flyout>
                <StackPanel>
                    <TextBlock Text="Paste" />
                    <Image Style="{StaticResource iconPaste}" />
                </StackPanel>
            </Button>
        </StackPanel>

        <!--  Image Display  -->
        <ScrollViewer
            Grid.Row="1"
            Grid.Column="0"
            Focusable="True"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">

            <Grid
                Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}, Converter={StaticResource ScrollViewerToMarginStringConverter}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <ScaleTransform x:Key="transform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                </Grid.Resources>

                <i:Interaction.Behaviors>
                    <behaviors:MouseCaptureBehavior Proxy="{Binding}" RequireCtrlForMouseWheel="True" />
                </i:Interaction.Behaviors>

                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="1"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDropTarget="True"
                    LayoutTransform="{StaticResource transform}"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    SnapsToDevicePixels="True"
                    Source="{Binding ArrangerSource}"
                    Stretch="None" />

                <Rectangle
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="0"
                    Fill="{StaticResource CheckeredBrush}"
                    LayoutTransform="{StaticResource transform}" />

                <!--  Selection and Paste Overlay  -->
                <Canvas
                    x:Name="overlayCanvas"
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="2"
                    dd:DragDrop.DragHandler="{Binding}"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    LayoutTransform="{StaticResource transform}">
                    <Rectangle
                        Canvas.Left="{Binding Overlay.SelectionRect.SnappedLeft}"
                        Canvas.Top="{Binding Overlay.SelectionRect.SnappedTop}"
                        Width="{Binding Overlay.SelectionRect.SnappedWidth}"
                        Height="{Binding Overlay.SelectionRect.SnappedHeight}"
                        Fill="{StaticResource editSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3"
                        Visibility="{Binding Overlay.State, Converter={StaticResource OverlayStateVisibilityConverter}, ConverterParameter=Selection}" />
                    <Rectangle
                        Canvas.Left="{Binding Overlay.PasteRect.SnappedLeft}"
                        Canvas.Top="{Binding Overlay.PasteRect.SnappedTop}"
                        Width="{Binding Overlay.PasteRect.SnappedWidth}"
                        Height="{Binding Overlay.PasteRect.SnappedHeight}"
                        dd:DragDrop.IsDropTarget="True"
                        Fill="{StaticResource pasteSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3"
                        Visibility="{Binding Overlay.State, Converter={StaticResource OverlayStateVisibilityConverter}, ConverterParameter=Paste}" />
                </Canvas>

                <!--  Gridline Overlay  -->
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="3"
                    ItemsSource="{Binding Gridlines}"
                    Visibility="{Binding ShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Gridline}">
                            <Line
                                RenderOptions.EdgeMode="Aliased"
                                SnapsToDevicePixels="True"
                                Stroke="{DynamicResource gridLineBrush}"
                                StrokeThickness="1"
                                UseLayoutRounding="True"
                                X1="{Binding X1}"
                                X2="{Binding X2}"
                                Y1="{Binding Y1}"
                                Y2="{Binding Y2}">
                                <Line.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Line.LayoutTransform>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
