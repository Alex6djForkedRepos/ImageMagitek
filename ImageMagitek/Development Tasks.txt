Codec operations
- Work to find increased orthogonality of methods
- Flowtiles (?)
- "Compiled" remap
- Direct decoding/encoding
- Separate GeneralGraphicsCodec into IDirectGraphicsCodec and IIndexedGraphicsCodec versions
- Implement flip/rotation functionality as post-decode, pre-encode steps
- Write schema after new spec

Usage improvements
- Helper methods for conveniently defining and decoding/encoding small graphics

FileStream - Currently always opened
- Create a FileStreamContext service to keep track of opened files for a given operation
- Manage FileStreamContext in ArrangerImage and inject context into Codec
- Potentially inject into ArrangerImage as well to scope the context
- FileStreamContext will dispose of opened FileStreams

Error handling
- Need a pattern to implement errors intended to notify users
- Better error handling for serializers

Documentation
- Clean up code documentation between element and pixel coordinates

Project
- Implement renaming/moving logic

Refactors
- ArrangerElement - Change to immutable, restrict access to Arranger.SetElement so that the Arranger can enforce rules

Tests
- Graphics encoder/decoder tests

File reading
- ReadUnshifted can crash during unaligned reads (reading too much data).
- ReadUnshifted needs a new case of a partial read on an aligned address.
- ReadShifted needs implemented for non-byte sized elements.

Bugs
- ReadUnshifted can crash during unaligned reads (reading too much data). Will need to fix as well as implement ReadShifted for non-byte sized elements.
- CodecFactory / GeneralGraphicsCodec does not resize RowExtendedPixelPattern (tested via PSX 8bpp XML codec)
- Fix palette within PixelEditorViewModel to limit range for default palettes