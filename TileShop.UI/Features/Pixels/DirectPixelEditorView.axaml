<UserControl
    x:Class="TileShop.UI.Views.DirectPixelEditorView"
    x:DataType="vm:DirectPixelEditorViewModel"
    x:Name="pixelEditor"
    xmlns="https://github.com/avaloniaui"
    xmlns:con="using:TileShop.UI.Converters"
    xmlns:fac="using:FluentAvalonia.UI.Controls"
    xmlns:m="using:TileShop.UI.Models"
    xmlns:model="using:TileShop.Shared.Models"
    xmlns:paz="using:Avalonia.Controls.PanAndZoom"
    xmlns:res="using:TileShop.UI.Resources"
    xmlns:vm="using:TileShop.UI.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <UserControl.KeyBindings>
        <KeyBinding Command="{Binding ToggleGridlineVisibilityCommand}" Gesture="G" />
        <KeyBinding Command="{Binding CancelOverlayCommand}" Gesture="Escape" />
        <KeyBinding Command="{Binding ConfirmPendingOperationCommand}" Gesture="Return" />
        <KeyBinding Command="{Binding SaveChangesCommand}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding UndoCommand}" Gesture="Ctrl+Z" />
        <KeyBinding Command="{Binding RedoCommand}" Gesture="Ctrl+Y" />
        <KeyBinding Command="{Binding SelectAllCommand}" Gesture="Ctrl+A" />
        <KeyBinding Command="{Binding ModifyGridSettingsCommand}" Gesture="Ctrl+G" />
    </UserControl.KeyBindings>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Command="{Binding SelectAllCommand}" Header="Select All" />
            <MenuItem Command="{Binding ModifyGridSettingsCommand}" Header="Grid Settings..." />
        </ContextMenu>
    </UserControl.ContextMenu>

    <Grid
        ColumnDefinitions="*,*"
        RowDefinitions="auto,auto,*"
        UseLayoutRounding="True">

        <!--  Toolbar  -->
        <Border Grid.ColumnSpan="2" Padding="8">
            <StackPanel
                ContextMenu="{StaticResource contextMenu}"
                Orientation="Horizontal"
                Spacing="4">
                <StackPanel Margin="0,8,0,8" Spacing="4">
                    <TextBlock HorizontalAlignment="Center" Text="Grid" />
                    <ToggleButton
                        Focusable="False"
                        IsChecked="{Binding GridSettings.ShowGridlines}"
                        ToolTip.Tip="Toggle gridline visibility (G)">
                        <fac:FAPathIcon Classes="medium" Data="{x:Static res:AppIcons.Grid}" />
                    </ToggleButton>
                </StackPanel>

                <Border
                    Background="{DynamicResource separatorBrush}"
                    BorderBrush="{DynamicResource separatorBrush}"
                    BorderThickness="1"
                    CornerRadius="1"
                    HorizontalAlignment="Center"
                    Margin="8,0,8,0"
                    Opacity="0.1"
                    VerticalAlignment="Stretch" />

                <!--  Tools  -->
                <StackPanel Margin="0,8,0,8" Spacing="4">
                    <TextBlock HorizontalAlignment="Center" Text="Tools" />

                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <RadioButton
                            Classes="tool"
                            Command="{Binding ChangeToolCommand}"
                            CommandParameter="{x:Static vm:PixelTool.Select}"
                            IsChecked="{Binding ActiveTool, Mode=OneWay, Converter={x:Static con:AppConverters.EnumToBoolean}, ConverterParameter=Select}"
                            ToolTip.Tip="Rectangular Selection Tool">
                            <fac:FAPathIcon Classes="medium" Data="{x:Static res:AppIcons.RectangularSelection}" />
                        </RadioButton>
                        <RadioButton
                            Classes="tool"
                            Command="{Binding ChangeToolCommand}"
                            CommandParameter="{x:Static vm:PixelTool.Pencil}"
                            IsChecked="{Binding ActiveTool, Mode=OneWay, Converter={x:Static con:AppConverters.EnumToBoolean}, ConverterParameter=Pencil}"
                            ToolTip.Tip="Pencil Tool">
                            <fac:FAPathIcon Classes="medium" Data="{x:Static res:AppIcons.Pencil}" />
                        </RadioButton>
                        <RadioButton
                            Classes="tool"
                            Command="{Binding ChangeToolCommand}"
                            CommandParameter="{x:Static vm:PixelTool.ColorPicker}"
                            IsChecked="{Binding ActiveTool, Mode=OneWay, Converter={x:Static con:AppConverters.EnumToBoolean}, ConverterParameter=ColorPicker}"
                            ToolTip.Tip="Color Picker Tool">
                            <fac:FAPathIcon Classes="medium vflip" Data="{x:Static res:AppIcons.ColorPicker}" />
                        </RadioButton>
                        <RadioButton
                            Classes="tool"
                            Command="{Binding ChangeToolCommand}"
                            CommandParameter="{x:Static vm:PixelTool.FloodFill}"
                            IsChecked="{Binding ActiveTool, Mode=OneWay, Converter={x:Static con:AppConverters.EnumToBoolean}, ConverterParameter=FloodFill}"
                            ToolTip.Tip="Flood Fill Tool">
                            <fac:FAPathIcon Classes="medium vflip" Data="{x:Static res:AppIcons.FloodFill}" />
                        </RadioButton>
                    </StackPanel>
                </StackPanel>

                <StackPanel Margin="0,8,0,8" Spacing="4">
                    <TextBlock HorizontalAlignment="Center" Text="Active Colors" />
                    <StackPanel
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="2">
                        <ColorPicker Color="{Binding PrimaryColor, Converter={x:Static con:AppConverters.ColorRgba32ToMediaColor}}" Height="40" />
                        <ColorPicker Color="{Binding SecondaryColor, Converter={x:Static con:AppConverters.ColorRgba32ToMediaColor}}" Height="40" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Border>

        <!--  Image Display  -->
        <ScrollViewer
            Focusable="True"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Grid.Row="2"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">

            <paz:ZoomBorder
                HorizontalAlignment="Stretch"
                PowerFactor="2"
                Stretch="None"
                VerticalAlignment="Stretch"
                x:Name="zoomBorder">
                <Grid>
                    <!--  Separate backing grid to ensure the Canvas uses drawing tools and doesn't popup a ContextMenu  -->
                    <Grid Background="Transparent" ContextMenu="{StaticResource contextMenu}" />

                    <Canvas
                        Background="{Binding GridSettings.BackgroundBrush}"
                        Classes="arrangerDrop"
                        ClipToBounds="True"
                        MaxHeight="{Binding BitmapAdapter.Height}"
                        MaxWidth="{Binding BitmapAdapter.Width}"
                        PointerExited="OnPointerExited"
                        PointerMoved="OnPointerMoved"
                        PointerPressed="OnPointerPressed"
                        PointerReleased="OnPointerReleased"
                        x:Name="overlayCanvas">

                        <!--  Editable Image  -->
                        <Image
                            Classes="pixel"
                            IsHitTestVisible="False"
                            RenderOptions.BitmapInterpolationMode="None"
                            Source="{Binding BitmapAdapter.Bitmap}"
                            x:Name="image" />

                        <Rectangle
                            Canvas.Left="{Binding Selection.SelectionRect.SnappedLeft}"
                            Canvas.Top="{Binding Selection.SelectionRect.SnappedTop}"
                            Classes="arrangerDrag animatedBorder selection"
                            Height="{Binding Selection.SelectionRect.SnappedHeight}"
                            IsVisible="{Binding Selection.HasSelection}"
                            Width="{Binding Selection.SelectionRect.SnappedWidth}" />

                        <Image
                            Canvas.Left="{Binding Paste.Rect.SnappedLeft}"
                            Canvas.Top="{Binding Paste.Rect.SnappedTop}"
                            Classes="arrangerDrag pixel"
                            Height="{Binding Paste.Rect.SnappedHeight, FallbackValue=0}"
                            IsHitTestVisible="{Binding !Paste.IsDragging}"
                            RenderOptions.BitmapInterpolationMode="None"
                            Source="{Binding Paste.OverlayImage.Bitmap}"
                            Width="{Binding Paste.Rect.SnappedWidth, FallbackValue=0}"
                            x:Name="pasteImage" />

                        <Rectangle
                            Canvas.Left="{Binding Paste.Rect.SnappedLeft}"
                            Canvas.Top="{Binding Paste.Rect.SnappedTop}"
                            Classes="animatedBorder paste"
                            Height="{Binding Paste.Rect.SnappedHeight, FallbackValue=0}"
                            Width="{Binding Paste.Rect.SnappedWidth, FallbackValue=0}" />

                        <!--  Tool Preview  -->
                        <Rectangle
                            Fill="{Binding PrimaryColor, Converter={x:Static con:AppConverters.ColorRgba32ToMediaColor}}"
                            Height="1"
                            IsHitTestVisible="False"
                            RadiusX="0.1"
                            RadiusY="0.1"
                            StrokeThickness="0.1"
                            Width="1"
                            x:Name="penPreview">
                            <Rectangle.Stroke>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5" RadiusX="100%" RadiusY="100%">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="White" Offset="0.5" />
                                    <GradientStop Color="Black" Offset="1" />
                                </RadialGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Canvas>

                    <!--  Gridline Overlay  -->
                    <ItemsControl
                        ClipToBounds="True"
                        IsHitTestVisible="False"
                        IsVisible="{Binding GridSettings.ShowGridlines}"
                        ItemsSource="{Binding GridSettings.Gridlines}"
                        MaxHeight="{Binding BitmapAdapter.Height}"
                        MaxWidth="{Binding BitmapAdapter.Width}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas IsHitTestVisible="False" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type model:Gridline}">
                                <Line
                                    EndPoint="{Binding Converter={x:Static con:AppConverters.GridlineToEndPoint}}"
                                    IsHitTestVisible="False"
                                    StartPoint="{Binding Converter={x:Static con:AppConverters.GridlineToStartPoint}}"
                                    Stroke="{Binding #zoomBorder.((vm:ArrangerEditorViewModel)DataContext).GridSettings.LineColor, Converter={x:Static con:AppConverters.ColorToBrush}}"
                                    StrokeThickness="0.40"
                                    UseLayoutRounding="True" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </paz:ZoomBorder>
        </ScrollViewer>
    </Grid>
</UserControl>
