<UserControl
    x:Class="TileShop.WPF.Views.SequentialArrangerEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:TileShop.WPF.Behaviors"
    xmlns:converters="clr-namespace:TileShop.WPF.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:helpers="clr-namespace:TileShop.WPF.Helpers"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:TileShop.WPF.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TileShop.WPF.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <!--  cm:Message.Attach="[Key OemPlus] = [MoveByteDown]; [Key Add] = [MoveByteDown]; [Key Subtract] = [MoveByteUp]; [Key OemMinus] = [MoveByteUp]; [Key Down] = [MoveRowDown]; [Key Up] = [MoveRowUp]; [Key Right] = [MoveColumnRight]; [Key Left] = [MoveColumnLeft]; [Key PageDown] = [MovePageDown]; [Key PageUp] = [MovePageUp]; [Key Home] = [MoveHome]; [Key End] = [MoveEnd]; [Key OemQuestion] = [ExpandWidth]; [Key OemPeriod] = [ShrinkWidth]; [Key L] = [ExpandHeight]; [Key OemSemicolon] = [ShrinkHeight]; [Key A] = [SelectNextCodec]; [Key S] = [SelectPreviousCodec]; [Key Z] = [ZoomIn]; [Key X] = [ZoomOut]; [Key G] = [ToggleGridlineVisibility]; [Key J] = [ShowJumpDialog]; [Key Escape] = [CancelSelection]; [Event Closing] = [Action OnClose($eventArgs)]"  -->
    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Toolbar  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,10,0,20"
            Orientation="Horizontal">
            <ComboBox ItemsSource="{Binding CodecNames}" SelectedValue="{Binding SelectedCodecName}" />
            <Slider
                MinWidth="100"
                Margin="10,0,10,0"
                Focusable="False"
                Maximum="{Binding MaxZoom}"
                Minimum="{Binding MinZoom}"
                Value="{Binding Zoom}" />
            <ToggleButton
                Margin="0,0,10,0"
                Content="#"
                Focusable="False"
                IsChecked="{Binding ShowGridlines}"
                Visibility="{Binding CanShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
            <ToggleButton
                Margin="0,0,10,0"
                Content="Snap"
                IsChecked="{Binding Selection.SnapMode, Converter={StaticResource SnapModeBooleanConverter}}"
                Visibility="{Binding CanChangeSnapMode, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding TiledElementWidth}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding TiledElementHeight}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding TiledArrangerWidth}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding TiledArrangerHeight}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsLinearLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding LinearArrangerWidth}" />
            <mah:NumericUpDown
                Minimum="1"
                Visibility="{Binding IsLinearLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                Value="{Binding LinearArrangerHeight}" />
            <Button
                Margin="10,0,0,0"
                Click="{s:Action EditSelection}"
                Content="Edit"
                IsEnabled="{Binding Selection.HasSelection}" />
        </StackPanel>

        <!--  Image Display  -->
        <ScrollViewer
            Grid.Row="1"
            Grid.Column="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.Resources>
                    <ScaleTransform x:Key="transform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                    <SolidColorBrush
                        x:Key="arrangeSelectionFillBrush"
                        Opacity="0.5"
                        Color="Maroon" />
                    <SolidColorBrush
                        x:Key="editSelectionFillBrush"
                        Opacity="0.5"
                        Color="LawnGreen" />
                </Grid.Resources>

                <i:Interaction.Behaviors>
                    <behaviors:MouseCaptureBehavior Proxy="{Binding}" />
                </i:Interaction.Behaviors>

                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    dd:DragDrop.DropHandler="{Binding}"
                    LayoutTransform="{StaticResource transform}"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    SnapsToDevicePixels="True"
                    Source="{Binding ArrangerSource}"
                    Stretch="None" />

                <!--  Selection Overlay  -->
                <Canvas
                    Grid.Row="0"
                    Grid.Column="0"
                    DataContext="{Binding Selection, Mode=TwoWay}"
                    LayoutTransform="{StaticResource transform}"
                    Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <Rectangle
                        Canvas.Left="{Binding SnappedX1}"
                        Canvas.Top="{Binding SnappedY1}"
                        Width="{Binding SnappedWidth}"
                        Height="{Binding SnappedHeight}"
                        Fill="{StaticResource arrangeSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3" />
                </Canvas>

                <!--  Gridline Overlay  -->
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    ItemsSource="{Binding Gridlines}"
                    Visibility="{Binding ShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Gridline}">
                            <Line
                                RenderOptions.EdgeMode="Aliased"
                                SnapsToDevicePixels="True"
                                Stroke="Black"
                                StrokeThickness="1"
                                UseLayoutRounding="True"
                                X1="{Binding X1}"
                                X2="{Binding X2}"
                                Y1="{Binding Y1}"
                                Y2="{Binding Y2}">
                                <Line.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Line.LayoutTransform>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
