<UserControl
    x:Class="TileShop.WPF.Views.ScatteredArrangerEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:TileShop.WPF.Behaviors"
    xmlns:converters="clr-namespace:TileShop.WPF.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:TileShop.WPF.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TileShop.WPF.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.InputBindings>
        <KeyBinding Key="Z" Command="{s:Action ZoomIn}" />
        <KeyBinding Key="X" Command="{s:Action ZoomOut}" />
        <KeyBinding Key="G" Command="{s:Action ToggleGridlineVisibility}" />
        <KeyBinding Key="Escape" Command="{s:Action CancelOverlay}" />
    </UserControl.InputBindings>

    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,10,0,20"
            Orientation="Horizontal">

            <RadioButton
                Content="Select"
                GroupName="Tools"
                IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Select}"
                Style="{StaticResource {x:Type ToggleButton}}"
                ToolTip="Click and drag across Arranger to select a region" />
            <RadioButton
                Content="ApplyPal"
                GroupName="Tools"
                IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=ApplyPalette}"
                Style="{StaticResource {x:Type ToggleButton}}"
                ToolTip="Click on Arranger element to apply the current palette" />
            <RadioButton
                Content="PickPal"
                GroupName="Tools"
                IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=PickPalette}"
                Style="{StaticResource {x:Type ToggleButton}}"
                ToolTip="Click on an Arranger element to pick its associated palette" />

            <Slider
                MinWidth="100"
                Margin="10,0,10,0"
                Maximum="{Binding MaxZoom}"
                Minimum="{Binding MinZoom}"
                Value="{Binding Zoom}" />

            <ToggleButton
                Margin="0,0,10,0"
                Content="#"
                Focusable="False"
                IsChecked="{Binding ShowGridlines}"
                Visibility="{Binding CanShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />

            <Button
                Click="{s:Action ResizeArranger}"
                Content="Resize"
                ToolTip="Resizes the Arranger"
                Visibility="{Binding IsTiledArranger}" />

            <Separator />

            <ComboBox ItemsSource="{Binding Palettes}" SelectedItem="{Binding ActivePalette}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Button
                Click="{s:Action EditSelection}"
                Content="Edit"
                IsEnabled="{Binding CanEditSelection}"
                ToolTip="Opens selection in the pixel editor" />

            <Button
                Margin="10,0,0,0"
                Click="{s:Action SaveChanges}"
                Content="Save"
                IsEnabled="{Binding IsModified}"
                ToolTip="Saves arranger properties to in-memory project" />

            <Button
                Click="{s:Action ApplyPasteAsPixels}"
                Content="PasteAsPixels"
                Visibility="{Binding CanPastePixels, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}" />

            <Button
                Click="{s:Action ApplyPasteAsElements}"
                Content="PasteAsElements"
                Visibility="{Binding CanPasteElements, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}" />
        </StackPanel>

        <!--  Image Display  -->
        <ScrollViewer
            Grid.Row="1"
            Grid.Column="0"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">

            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <ScaleTransform x:Key="transform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                    <SolidColorBrush
                        x:Key="pasteSelectionFillBrush"
                        Opacity="0.5"
                        Color="Fuchsia" />
                    <SolidColorBrush
                        x:Key="editSelectionFillBrush"
                        Opacity="0.5"
                        Color="LawnGreen" />
                </Grid.Resources>

                <i:Interaction.Behaviors>
                    <behaviors:MouseCaptureBehavior Proxy="{Binding}" />
                </i:Interaction.Behaviors>

                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="1"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDropTarget="True"
                    LayoutTransform="{StaticResource transform}"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    SnapsToDevicePixels="True"
                    Source="{Binding ArrangerSource}"
                    Stretch="None" />

                <Rectangle
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="0"
                    Fill="{StaticResource CheckeredBrush}"
                    LayoutTransform="{StaticResource transform}" />

                <!--  Selection and Paste Overlay  -->
                <Canvas
                    x:Name="overlayCanvas"
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="2"
                    dd:DragDrop.DragHandler="{Binding}"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    LayoutTransform="{StaticResource transform}">
                    <Rectangle
                        Canvas.Left="{Binding Overlay.SelectionRect.SnappedLeft}"
                        Canvas.Top="{Binding Overlay.SelectionRect.SnappedTop}"
                        Width="{Binding Overlay.SelectionRect.SnappedWidth}"
                        Height="{Binding Overlay.SelectionRect.SnappedHeight}"
                        Fill="{StaticResource editSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3"
                        Visibility="{Binding Overlay.State, Converter={StaticResource OverlayStateVisibilityConverter}, ConverterParameter=Selection}" />
                    <Rectangle
                        Canvas.Left="{Binding Overlay.PasteRect.SnappedLeft}"
                        Canvas.Top="{Binding Overlay.PasteRect.SnappedTop}"
                        Width="{Binding Overlay.PasteRect.SnappedWidth}"
                        Height="{Binding Overlay.PasteRect.SnappedHeight}"
                        dd:DragDrop.IsDropTarget="True"
                        Fill="{StaticResource pasteSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3"
                        Visibility="{Binding Overlay.State, Converter={StaticResource OverlayStateVisibilityConverter}, ConverterParameter=Paste}" />
                </Canvas>

                <!--  Gridline Overlay  -->
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="3"
                    ItemsSource="{Binding Gridlines}"
                    Visibility="{Binding ShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Gridline}">
                            <Line
                                RenderOptions.EdgeMode="Aliased"
                                SnapsToDevicePixels="True"
                                Stroke="Black"
                                StrokeThickness="1"
                                UseLayoutRounding="True"
                                X1="{Binding X1}"
                                X2="{Binding X2}"
                                Y1="{Binding Y1}"
                                Y2="{Binding Y2}">
                                <Line.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Line.LayoutTransform>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
